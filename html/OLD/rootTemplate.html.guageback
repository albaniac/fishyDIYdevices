<!DOCTYPE html>
<html>
<head>
<!-- <meta http-equiv='refresh' content='5'/> -->
<title>fishyDIY.local Network Devices</title>
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jquerymobile/1.4.5/jquery.mobile.min.css">
	
	<script src="https://ajax.googleapis.com/ajax/libs/jquerymobile/1.4.5/jquery.mobile.min.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquerymobile/1.4.5/jquery.mobile.min.js"></script>
	
	
	<script type="text/javascript">$( document ).bind( 'mobileinit', function(){
  $.mobile.loader.prototype.options.text = "loading";
  $.mobile.loader.prototype.options.textVisible = false;
  $.mobile.loader.prototype.options.theme = "a";
  $.mobile.loader.prototype.options.html = "";
});</script>
	
	</head>
<body>

 <script type="text/javascript">
var opts = {
  angle: -0.2, // The span of the gauge arc
  lineWidth: 0.2, // The line thickness
  radiusScale: 0.79, // Relative radius
  pointer: {
    length: 0.6, // // Relative to gauge radius
    strokeWidth: 0.035, // The thickness
    color: '#000000' // Fill color
  },
  staticLabels: {
  font: "10px sans-serif",  // Specifies font
  labels: [-3500, 3500, 0, -750, 500, 2000],  // Print labels at these values
  color: "#000000",  // Optional: Label text color
  fractionDigits: 0  // Optional: Numerical precision. 0=round off.
  },
  staticZones: [
   {strokeStyle: "#F03E3E", min: -3500, max: -2000}, // Red from 100 to 130
   {strokeStyle: "#FFDD00", min: -2000, max: -750}, // Yellow
   {strokeStyle: "#30B32D", min: -750, max: 500}, // Green
   {strokeStyle: "#FFDD00", min: 500, max: 2000}, // Yellow
   {strokeStyle: "#F03E3E", min:2000, max: 3500}  // Red
  ],
  limitMax: false,     // If false, max value increases automatically if value > maxValue
  limitMin: false,     // If true, the min value of the gauge will be fixed
  colorStart: '#6FADCF',   // Colors
  colorStop: '#8FC0DA',    // just experiment with them
  strokeColor: '#E0E0E0',  // to see which ones work best for you
  generateGradient: true,
  highDpiSupport: true,     // High resolution support
  
};


(function() {
  var fishyJSON = 'http://10.203.1.197/device.JSON';
  $.getJSON(fishyJSON)
    .done(function( data ) {
      $.each( data.fishyDevices, function( i, device ) {
		console.log( "JSON Data: " + i );
		//var content = "<div data-role='collapsible' id='" + device.IP + "'><h3>Device ID " + device.IP + "</h3><p>" + device.IP + device.dead + device.name + "</p></div>";
        var content = "<div class='ui-corner-all custom-corners'><div class='ui-bar ui-bar-a'><h3>Heading</h3></div><div class='ui-body ui-body-a'><p>Content</p></div></div>";
		var $div = $('<div />').appendTo('body');
		$div.attr('id', 'holdy');
		//$div.attr('class','ui-corner-all custom-corners'><div class='ui-bar ui-bar-a'><h3>Heading</h3></div><div class='ui-body ui-body-a'><p>Content</p></div></div>
		
		if (device.dead == "0"){
			$("#fishyDeviceList").append( content ).collapsibleset('refresh');
		}else{
			
		}
        //$( "<div data-role = 'collapsible'>" ).attr( "innerHTML", device.IP ).appendTo( "#fishyDeviceList" );
        
      });
    });
})();

</script>
<div data-role="collapsible" data-theme="b" data-content-theme="d" data-collapsed="false">
<div data-theme="b">
<h3>Vent Damper 1</h3>
<div data-role="rangeslider" data-track-theme="b"  data-mini="true">
<label for="range-3a">Set Limits:</label>
<input type="range" name="range-3a" id="range-3a" min="0" max="100" value="20">
<label for="range-3b">Rangeslider:</label>
<input type="range" name="range-3b" id="range-3b" min="0" max="100" value="100">
</div>
<div data-role="controlgroup" data-type="horizontal" >
<a href="#" data-role="button" >Open</a>
<a href="#" data-role="button" >Close</a>
<a href="#" data-role="button" >Go to</a></div>	   
</div>
</div>
<script type='text/javascript'>
var target = document.getElementById('canvas1'); // your canvas element
var gauge = new Gauge(target).setOptions(opts); // create sexy gauge!
gauge.maxValue = 3500; // set max gauge value
gauge.setMinValue(-3500);  // Prefer setter over gauge.minValue = 0
gauge.animationSpeed = 22; // set animation speed (32 is default value)
gauge.set(1500); // set actual value
</script>
</body>
</html>